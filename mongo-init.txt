#cloud-config

bootcmd:
- docker pull google/cloud-sdk:272.0.0-alpine
- docker pull mongo:4.0.11-xenial

runcmd:
- cd /home
- docker run --rm -v $PWD:$PWD -w $PWD google/cloud-sdk:272.0.0-alpine gsutil ls | grep mongo-environment | cut -c6- | sed -e "s/\r//g" > bucket-location.txt
- docker run --rm -v $PWD:$PWD -w $PWD google/cloud-sdk:272.0.0-alpine gsutil ls gs://$(cat bucket-location.txt) | cut -c6- | sed -e "s/\r//g" > object-location.txt
- docker run --rm -v $PWD:$PWD -w $PWD google/cloud-sdk:272.0.0-alpine gsutil cp gs://$(cat object-location.txt) .
- cat object-location.txt | cut -d "/" -f2 > object-name.txt
- docker run --rm -v $PWD:$PWD -v $PWD -w $PWD google/cloud-sdk:272.0.0-alpine gcloud kms decrypt --location europe-west1 --keyring default-key-ring-name --key default-key-name --plaintext-file variables.dec --ciphertext-file $(cat object-name.txt)
- source ./variables.dec
- docker network create mongodb-network
- docker run -d --network mongodb-network --name mongodb-container -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=$MONGO_USER -e MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD mongo:4.0.11-xenial
- rm $(cat object-name.txt) && rm variables.dec && unset MONGO_USER && unset MONGO_PASSWORD